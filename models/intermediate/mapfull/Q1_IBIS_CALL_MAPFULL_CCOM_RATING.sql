-- File: 4
{{ config(
    materialized='table',
    pre_hook="DROP TABLE IF EXISTS {{ this }}"
    ) 
}}

WITH final_IBIS_CALL_RATING AS (
    SELECT * FROM {{ref('Q1_IBIS_CALL_MAPFULL_CCOM_INBOUND_RATING') }}
    UNION ALL
    SELECT * FROM {{ref('Q1_IBIS_CALL_MAPFULL_CCOM_NOT_INBOUND_RATING') }}
)

-- UPDATE
SELECT  
    A.CALL_DT,               
    A.IN_CDR_FILE_ID,        
    A.IN_CDR_SERIAL_NR,
    A.IN_SEGMENT_DT,         
    A.OUT_CDR_FILE_ID,       
    A.OUT_CDR_SERIAL_NR,
    A.OUT_SEGMENT_DT,        
    A.MAP_STATUS,            
    A.TRANSM_OPER_ID,
    A.I_TGC_ID,              
    A.RECV_OPER_ID,          
    A.O_TGC_ID,
    A.IN_DEST_OPER_ID,       
    A.OUT_DEST_OPER_ID,
    A.CALL_SET_UP_DURATION,  
    A.CALL_DURATION_TM,      
    A.ADD_ORIG_OPER_ID,
    A.DIALLED_NR,            
    A.ROUTED_NR,             
    A.A_NR,
    A.IN_DEST_SUB_SVC_ID,    
    A.OUT_DEST_SUB_SVC_ID,   
    A.IN_VAS_DIRECTION,
    A.IN_VAS_PRODUCT,        
    A.IN_VAS_ACCESS_NUMBER,  
    A.IN_VAS_CUSTOMER_ROUTING_NUMBER,
    A.IN_VAS_B_NUMBER,       
    A.IN_VAS_B_NUMBER_CTRY_CD,
    A.OUT_VAS_DIRECTION,     
    A.OUT_VAS_PRODUCT,        
    A.OUT_VAS_ACCESS_NUMBER,
    A.OUT_VAS_CUSTOMER_ROUTING_NUMBER,
    A.OUT_VAS_B_NUMBER,      
    A.OUT_VAS_B_NUMBER_CTRY_CD,
    A.IN_GLOBAL_CALL_ID,
    A.OUT_GLOBAL_CALL_ID,
    A.IN_ACCOUNT_OPER_ID,
    A.IN_REVN_EXP_IND,
    A.IN_AMOUNT,
    A.IN_CURRENCY_ID,
    A.IN_NUMBER_OF_UNITS,
    A.IN_ORIGINAL_NUMBER_OF_UNITS,
    A.IN_TARIFF_ELEMENT_ID,
    A.IN_TARIFF_TYPE_ID,
    A.IN_TIME_DIFF_INTERVAL_ID,
    A.IN_UNIT_TARIFF,
    A.IN_TARIFF_GRP_ID,
    A.IN_TARIFF_PROD_SVC_ID,
    A.IN_RATING_TYPE_ID,
    A.IN_NUMBER_OF_CALLS,
    A.IN_UNIT_TARIFF_SETUP_FEE,
    A.IN_AMOUNT_SETUPFEE,
    A.IN_TARIFF_ELEMENT_ID_SETUPFEE,
    A.IN_IND,
    A.OUT_ACCOUNT_OPER_ID,
    A.OUT_REVN_EXP_IND, 
    A.OUT_AMOUNT, 
    A.OUT_CURRENCY_ID,  
    A.OUT_ORIGINAL_NUMBER_OF_UNITS,
    A.OUT_TARIFF_ELEMENT_ID,
    A.OUT_TARIFF_TYPE_ID,
    A.OUT_TIME_DIFF_INTERVAL_ID,
    A.OUT_UNIT_TARIFF,
    A.OUT_TARIFF_GRP_ID,
    A.OUT_TARIFF_PROD_SVC_ID,
    A.OUT_RATING_TYPE_ID,
    A.OUT_NUMBER_OF_CALLS,
    A.OUT_UNIT_TARIFF_SETUP_FEE,
    A.OUT_AMOUNT_SETUPFEE,
    A.OUT_TARIFF_ELEMENT_ID_SETUPFEE,
    A.OUT_IND,
    A.LOAD_DT,
    A.BEARER,
    A.DIRECTION,
    A.PRODUCT,
    A.SALES_DEST_DIALLED_NR,
    A.SALES_DEST_ROUTED_NR,
    A.DEST_SUB_SVC_CD,
    A.FIX_MOBILE,
    A.IN_DEST_ACCESS_AREA_ID,                
    A.OUT_DEST_ACCESS_AREA_ID,
    A.IN_UNIT_TARIFF_EURO_FINAL,
    A.OUT_UNIT_TARIFF_EURO_SAM,
    A.OUT_CHANGE_COMMENT_SAM,
    A.OUT_VIRTUAL_UNIT_TARIFF_EURO_SMART,
    A.OUT_CHANGE_COMMENT_SMART,
    A.OUT_UNIT_TARIFF_EURO_FINAL,
    A.OUT_CHANGE_COMMENT_FINAL,
    A.A_NR_CTRY_CD,
    A.B_NR_CTRY_CD,
    A.VAS_NAT_OUT_CALL_SRV_FLAG,
    A.ONNET_OFFNET_FLAG,
    A.DEST_OPER_ID,
    A.VAS_PORT_IN,
    A.ROUTING_DEST_DIALLED_NR,
    A.ROUTING_DEST_ROUTED_NR,
    A.ORIGINAL_PRODUCT,
    A.CUST_OPER_ID,
    A.CUST_TGC_ID,
    A.CUST_CURRENCY_ID,
    A.ORIG_OPER_ID,
    A.SUPPL_OPER_ID,
    A.SUPPL_TGC_ID,
    A.SUPPL_CURRENCY_ID,
    A.CUST_DEST_SUB_SVC_ID,
    A.SUPPL_DEST_SUB_SVC_ID,
    A.IN_UNIT_TARIFF_EURO_FINANCIAL,
    A.IN_UNIT_TARIFF_OC_FINAL,
    A.IN_UNIT_TARIFF_OC_FINANCIAL,
    A.IN_UNIT_TARIFF_SETUP_FEE_OC,
    A.OUT_UNIT_TARIFF_EURO_COGS,
    A.OUT_UNIT_TARIFF_OC_FINAL,
    A.OUT_UNIT_TARIFF_OC_FINANCIAL,
    A.OUT_UNIT_TARIFF_SETUP_FEE_OC,
    A.IN_UNIT_TARIFF_EURO_CORR,
    A.IN_CHANGE_COMMENT_CORR,
    A.OUT_NUMBER_OF_UNITS,
    A.OUT_UNIT_TARIFF_EURO_CORR,
    A.OUT_CHANGE_COMMENT_CORR,
    A.IN_CHANGE_COMMENT_FINAL,
    A.VAS_PORT_OUT,
    A.REVENUE,
    A.COST,
    A.IN_VAS_ACCESS_TYPE,
    A.OUT_VAS_ACCESS_TYPE,
    A.IN_VAS_CUSTOMER_POP,
    A.OUT_VAS_CUSTOMER_POP,
    A.MINIMUM_PRICE_PER_MINUTE_FEE,
    A.MINIMUM_PRICE_SETUP_FEE,
    A.RETAIL_PRICE_PER_MINUTE_FEE,
    A.RETAIL_PRICE_SETUP_FEE,
-- UPDATE FLAG_IND for VAS
    CASE 
        WHEN FLAG_IND = 'Y' 
        AND (
            {% for pattern in var('sub_svc_patterns', ['%IFT%', '%FF%', '%SCS%', '%IGEO%', 'FRING', '%VAS%']) %}
                DEST_SUBS.SUB_SVC_CD LIKE '{{ pattern }}' {% if not loop.last %} OR {% endif %}
            {% endfor %}
            OR I_TGC_ID IN ({{ var('i_tgc_ids', [259, 262]) | join(',') }})
            OR O_TGC_ID IN ({{ var('o_tgc_ids', [260, 261]) | join(',') }})
        )
        THEN 'V'  -- Assign 'V' if conditions match
        ELSE FLAG_IND  
    END AS FLAG_IND,
    
-- Get IN Exchange Rate
    -- Convert IN_UNIT_TARIFF to Euro based on exchange rate
    CASE 
        WHEN COALESCE(IN_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.IN_UNIT_TARIFF * COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1))  -- Direct multiplication if rate is not a fraction
        ELSE (A.IN_UNIT_TARIFF * (1 / COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1))) -- Inverse conversion otherwise
    END AS IN_UNIT_TARIFF_EURO,

    CASE 
        WHEN COALESCE(IN_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.IN_UNIT_TARIFF_SETUP_FEE * COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.IN_UNIT_TARIFF_SETUP_FEE * (1 / COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS IN_UNIT_TARIFF_SETUP_FEE_EURO,

    -- Convert IN_UNIT_TARIFF_SETUP_FEE to Euro
    CASE 
        WHEN COALESCE(IN_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.IN_AMOUNT * COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.IN_AMOUNT * (1 / COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS IN_AMOUNT_EURO,
    
    -- Convert IN_AMOUNT to Euro
    CASE 
        WHEN COALESCE(IN_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.IN_AMOUNT_SETUPFEE * COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.IN_AMOUNT_SETUPFEE * (1 / COALESCE(IN_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS IN_AMOUNT_SETUPFEE_EURO,

-- Get OUT Exchange Rate
    -- Convert IN_AMOUNT_SETUPFEE to Euro
    CASE 
        WHEN COALESCE(OUT_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.OUT_UNIT_TARIFF * COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.OUT_UNIT_TARIFF * (1 / COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS OUT_UNIT_TARIFF_EURO,

    -- Convert OUT_UNIT_TARIFF to Euro
    CASE 
        WHEN COALESCE(OUT_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.OUT_UNIT_TARIFF_SETUP_FEE * COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.OUT_UNIT_TARIFF_SETUP_FEE * (1 / COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS OUT_UNIT_TARIFF_SETUP_FEE_EURO,

    -- Convert OUT_UNIT_TARIFF_SETUP_FEE to Euro
    CASE 
        WHEN COALESCE(OUT_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.OUT_AMOUNT * COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.OUT_AMOUNT * (1 / COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS OUT_AMOUNT_EURO,
    
    -- Convert OUT_AMOUNT_SETUPFEE to Euro
    CASE 
        WHEN COALESCE(OUT_CUR_RAT.RATE_AS_A_FRACTION, 0) = 0 
        THEN (A.OUT_AMOUNT_SETUPFEE * COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1)) 
        ELSE (A.OUT_AMOUNT_SETUPFEE * (1 / COALESCE(OUT_CUR_RAT.RATE_OF_EXCHANGE, 1))) 
    END AS OUT_AMOUNT_SETUPFEE_EURO

FROM final_IBIS_CALL_RATING A
LEFT  JOIN {{ref('IBIS_SUB_SERVICE')}}  DEST_SUBS
ON CAST(COALESCE(A.IN_DEST_SUB_SVC_ID, A.OUT_DEST_SUB_SVC_ID) AS STRING) = CAST(DEST_SUBS.SUB_SVC_ID AS STRING)
--join to get in exchange rate
LEFT JOIN {{ref('IBIS_B_EXCHANGE_RATE_DAY')}} IN_CUR_RAT
ON A.CALL_DT = IN_CUR_RAT.START_DT
AND A.IN_CURRENCY_ID = IN_CUR_RAT.CURRENCY_ID
AND IN_CUR_RAT.EXCHANGE_RATE_TYPE_ID = 2100007
--join to get out exchange rate
LEFT JOIN  {{ref('IBIS_B_EXCHANGE_RATE_DAY')}}  OUT_CUR_RAT
ON A.CALL_DT = OUT_CUR_RAT.START_DT
AND A.OUT_CURRENCY_ID = OUT_CUR_RAT.CURRENCY_ID
AND OUT_CUR_RAT.EXCHANGE_RATE_TYPE_ID = 2100007
